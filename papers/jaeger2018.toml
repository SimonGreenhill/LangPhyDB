title = "Global-scale phylogenetic linguistic inference from lexical resources"

doi = "10.1038/sdata.2018.189"

abstract = """
Automatic phylogenetic inference plays an increasingly important role in computational historical
linguistics. Most pertinent work is currently based on expert cognate judgments. This limits the scope
of this approach to a small number of well-studied language families. We used machine learning
techniques to compile data suitable for phylogenetic inference from the ASJP database, a collection of
almost 7,000 phonetically transcribed word lists over 40 concepts, covering two thirds of the extant
world-wide linguistic diversity. First, we estimated Pointwise Mutual Information scores between sound
classes using weighted sequence alignment and general-purpose optimization. From this we computed a
dissimilarity matrix over all ASJP word lists. This matrix is suitable for distance-based phylogenetic
inference. Second, we applied cognate clustering to the ASJP data, using supervised training of an SVM
classifier on expert cognacy judgments. Third, we defined two types of binary characters, based on
automatically inferred cognate classes and on sound-class occurrences. Several tests are reported
demonstrating the suitability of these characters for character-based phylogenetic inference.
"""

# authors in "Firstname Initial. Lastname" e.g. Simon J. Greenhill
authors = ['Gerhard JÃ¤ger']

# parts of the world
groups = ['global']  # 'Austronesian', etc

# bibkey citation in sources.bib
bibkey = "@Jaeger2018"  # @xxxx

# type of study
type = ['phylogenetic']  # phylogenetic,dating,phylogeography,macroevolutionary,trait

# short description of the study, one line.
description = "Global phylogeny from ASJP database using Pointwise Mutual Information"

# data
[data]

    notes = ""
    
    [data.asjp]
    ntaxa = 6892
    nchars = 40
    nsites = 40
    datatype = 'lexical distances'
    source = '@ASJP'
    items = ''
    comment = ''

# analysis information
[analysis]
    
    notes = ""
    
    [analysis.tree]
    tool = ''
    model = ''
    details = ""
